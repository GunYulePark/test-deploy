on:
  push:
    branches:
      - main
      
name: Deploy String boot to Amazon EC2
env:
  PROJECT_NAME: action_codedeploy
#   COOKIE_NAME: ${{ secrets.COOKIE_NAME }}
#   SECRET: ${{ secrets.SECRET }}
#   EXPIRATION_TIME: ${{ secrets.EXPIRATION_TIME }}

jobs:
  deploy:
    name: DEPLOY
    runs-on: ubuntu-18.04
      
    steps:
      - name: Checkout
        uses: actions/checkout@v2

#       - name: Setup MySQL
#         uses: samin/mysql-action@v1
#         with:
#           character set server: 'utf8' 
#           mysql database: 'ringcard' 
#           mysql user: 'root'
#           mysql password: ${{ secrets.MYSQL_PASSWORD }}
          
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew
        shell: bash

#      - name: gradle wrapper
#        run: gradle wrapper --gradle-version 7.5
#        shell: bash

      - name: Build with Gradle
        run: ./gradlew build
        shell: bash

      - name: Make zip file
        run: zip -qq -r ./$GITHUB_SHA.zip .
        shell: bash

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
          
          
#       - name: Generate Environment Variables File for Production
#         run: |
#           echo "SECRET=$SECRET" >> JwtProperties
#           echo "EXPIRATION_TIME=$EXPIRATION_TIME" >> JwtProperties
#           echo "COOKIE_NAME=$COOKIE_NAME" >> JwtProperties
#         env:
#           SECRET: ${{ secrets.SECRET }}
#           EXPIRATION_TIME: ${{ secrets.EXPIRATION_TIME }}
#           COOKIE_NAME: ${{ secrets.COOKIE_NAME }}

      - name: Upload to S3
        run: aws s3 cp --region ap-northeast-2 ./$GITHUB_SHA.zip s3://ringcabucket/$PROJECT_NAME/$GITHUB_SHA.zip

      - name: Code Deploy
        run: aws deploy create-deployment --application-name ringca-app --deployment-config-name CodeDeployDefault.OneAtATime --deployment-group-name dev --s3-location bucket=ringcabucket,bundleType=zip,key=$PROJECT_NAME/$GITHUB_SHA.zip
